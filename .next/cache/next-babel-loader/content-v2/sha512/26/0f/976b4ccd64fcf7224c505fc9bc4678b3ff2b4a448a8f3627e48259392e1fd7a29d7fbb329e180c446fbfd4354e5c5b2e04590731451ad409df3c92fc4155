{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Waldemar/Desktop/ReactJS/APINextCrudfirebase/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Waldemar/Desktop/ReactJS/APINextCrudfirebase/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Cors from 'cors';\nimport initMiddleware from '../lib/init-middleware';\nimport { DProduct } from 'crudfirebase/dproduct';\nimport { FactoryLogic } from 'e-commercee/ECommerce/dist/logic/FactoryLogic'; // Initialize the cors middleware\n\nvar cors = initMiddleware( // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\nCors({\n  // Only allow requests with GET, POST,PUT,DELETE and OPTIONS\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']\n}));\nexport default function handler(_x, _x2) {\n  return _handler.apply(this, arguments);\n} // export default function Index() {\n//   return (\n//     <p>\n//       To test the CORS route, open the console in a new tab on a different\n//       domain and make a POST / GET / OPTIONS request to <b>/api/cors</b>. Using\n//       a different method from those mentioned will be blocked by CORS\n//     </p>\n//   )\n// }\n\nfunction _handler() {\n  _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var list;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return cors(req, res);\n\n          case 2:\n            _context.next = 4;\n            return FactoryLogic.getLArticle().getArticles();\n\n          case 4:\n            list = _context.sent;\n            // Rest of the API logic\n            res.json(list);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handler.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/ReactJS/APINextCrudfirebase/pages/index.js"],"names":["Cors","initMiddleware","DProduct","FactoryLogic","cors","methods","handler","req","res","getLArticle","getArticles","list","json"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,SAAQC,YAAR,QAA2B,+CAA3B,C,CAEA;;AACA,IAAMC,IAAI,GAAGH,cAAc,EACzB;AACAD,IAAI,CAAC;AACH;AACAK,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAsB,QAAtB,EAA+B,SAA/B;AAFN,CAAD,CAFqB,CAA3B;AAQA,wBAA8BC,OAA9B;AAAA;AAAA,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;sEAjBe,iBAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEPJ,IAAI,CAACG,GAAD,EAAMC,GAAN,CAFG;;AAAA;AAAA;AAAA,mBAIIL,YAAY,CAACM,WAAb,GAA2BC,WAA3B,EAJJ;;AAAA;AAIPC,YAAAA,IAJO;AAKb;AACAH,YAAAA,GAAG,CAACI,IAAJ,CAASD,IAAT;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import Cors from 'cors'\nimport initMiddleware from '../lib/init-middleware'\nimport {DProduct} from 'crudfirebase/dproduct';\nimport {FactoryLogic} from 'e-commercee/ECommerce/dist/logic/FactoryLogic';\n\n// Initialize the cors middleware\nconst cors = initMiddleware(\n  // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\n  Cors({\n    // Only allow requests with GET, POST,PUT,DELETE and OPTIONS\n    methods: ['GET', 'POST', 'PUT','DELETE','OPTIONS'],\n  })\n)\n\nexport default async function handler(req, res) {\n  // Run cors\n  await cors(req, res)\n  // const list=await DProduct.getInstance().listproducts();\n  const list=await FactoryLogic.getLArticle().getArticles();\n  // Rest of the API logic\n  res.json(list)\n}\n\n// export default function Index() {\n//   return (\n//     <p>\n//       To test the CORS route, open the console in a new tab on a different\n//       domain and make a POST / GET / OPTIONS request to <b>/api/cors</b>. Using\n//       a different method from those mentioned will be blocked by CORS\n//     </p>\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}