{"ast":null,"code":"import Cors from 'cors';\nimport initMiddleware from '../../lib/init-middleware';\nimport dproduct from 'crudfirebase/dproduct'; // Initialize the cors middleware\n\nconst cors = initMiddleware( // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\nCors({\n  // Only allow requests with GET, POST,PUT,DELETE and OPTIONS\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']\n}));\nexport default async function handler(req, res) {\n  // Run cors\n  await cors(req, res);\n  const list = await dproduct.DProduct.getInstance().listproducts(); // Rest of the API logic\n\n  res.json({\n    message: list\n  });\n}","map":{"version":3,"sources":["C:/Users/Waldemar/Desktop/ReactJS/APINextjsRest/api-routes-cors-app/pages/api/cors.js"],"names":["Cors","initMiddleware","dproduct","cors","methods","handler","req","res","list","DProduct","getInstance","listproducts","json","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;AACA,MAAMC,IAAI,GAAGF,cAAc,EACzB;AACAD,IAAI,CAAC;AACH;AACAI,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAsB,QAAtB,EAA+B,SAA/B;AAFN,CAAD,CAFqB,CAA3B;AAQA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C;AACA,QAAMJ,IAAI,CAACG,GAAD,EAAMC,GAAN,CAAV;AACF,QAAMC,IAAI,GAAC,MAAMN,QAAQ,CAACO,QAAT,CAAkBC,WAAlB,GAAgCC,YAAhC,EAAjB,CAHgD,CAI9C;;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAT;AACD","sourcesContent":["import Cors from 'cors'\nimport initMiddleware from '../../lib/init-middleware'\nimport dproduct from 'crudfirebase/dproduct';\n\n// Initialize the cors middleware\nconst cors = initMiddleware(\n  // You can read more about the available options here: https://github.com/expressjs/cors#configuration-options\n  Cors({\n    // Only allow requests with GET, POST,PUT,DELETE and OPTIONS\n    methods: ['GET', 'POST', 'PUT','DELETE','OPTIONS'],\n  })\n)\n\nexport default async function handler(req, res) {\n  // Run cors\n  await cors(req, res)\nconst list=await dproduct.DProduct.getInstance().listproducts();\n  // Rest of the API logic\n  res.json({ message: list})\n}\n"]},"metadata":{},"sourceType":"module"}