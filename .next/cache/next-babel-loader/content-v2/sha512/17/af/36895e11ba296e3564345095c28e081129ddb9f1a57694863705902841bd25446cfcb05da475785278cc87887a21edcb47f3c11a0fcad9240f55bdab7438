{"ast":null,"code":"import cors from \"../cors\";\nimport { DProduct } from \"crudfirebase/dproduct\";\nimport { Product } from \"crudfirebase/dproduct\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    await cors(req, res);\n    const list = await DProduct.getInstance().listproducts();\n    res.send(list);\n  }\n\n  if (req.method === \"POST\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      var dtproduct = new Product(data.barcode, data.name, data.price);\n      const addproduct = await DProduct.getInstance().addProduct(dtproduct);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not add product\",\n          error\n        }\n      });\n    }\n  }\n\n  if (req.method === \"PUT\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      var dtproduct = new Product(data.barcode, data.name, data.price);\n      const updprod = await DProduct.getInstance().updateProduct(dtproduct);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not update product\",\n          error\n        }\n      });\n    }\n  }\n\n  if (req.method === \"DELETE\") {\n    await cors(req, res);\n    const {\n      barcode\n    } = req.query;\n\n    try {\n      var dtproduct = new Product(barcode, \"\", 0);\n      const delprod = await DProduct.getInstance().deleteProduct(dtproduct);\n      return res.status(200).json({\n        status: \"Success\"\n      });\n    } catch (error) {\n      return res.status(500).json({\n        status: \"Error\",\n        data: {\n          msg: \"Could not delete product\",\n          error\n        }\n      });\n    }\n  }\n} // export  async  function  getProduct(req, res) {\n//   const { pbarcode } = req.query;\n//   await cors(req, res)\n//     const product=await DProduct.getInstance().getproduct(pbarcode);\n//     res.json(product);\n// }","map":null,"metadata":{},"sourceType":"module"}